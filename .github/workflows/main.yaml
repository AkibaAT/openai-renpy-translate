name: Package Application with Pyinstaller

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

permissions: write-all

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - name: Create Windows Executable
      uses: sayyid5416/pyinstaller@v1
      with:
        python_ver: '3.12'
        spec: 'src/app.spec'
        requirements: 'src/requirements.txt'
        upload_exe_with_name: 'openai-renpy-translate-windows-x86_64'

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Create Linux Executable
      uses: sayyid5416/pyinstaller@v1
      with:
        python_ver: '3.12'
        spec: 'src/app.spec'
        requirements: 'src/requirements.txt'
        upload_exe_with_name: 'openai-renpy-translate-linux-x86_64'

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [ build-windows, build-linux ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download all workflow run artifacts
        id: get_artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release ${{ github.ref }}
      - name: Upload
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag_name="${GITHUB_REF##*/}"
          ls -lah artifacts
          mv artifacts/openai-renpy-translate-windows-x86_64/app.exe artifacts/openai-renpy-translate-windows-x86_64/openai-renpy-translate-windows-x86_64.exe
          mv artifacts/openai-renpy-translate-linux-x86_64/app artifacts/openai-renpy-translate-linux-x86_64/openai-renpy-translate-linux-x86_64
          ls -lah artifacts
          sleep 30
          gh release upload "$tag_name" $(find artifacts -type f -printf "%p ")
      - name: Set release status
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release: ${{ steps.create_release.outputs.id }}
          status: published
